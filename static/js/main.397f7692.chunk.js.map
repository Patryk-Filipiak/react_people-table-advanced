{"version":3,"sources":["components/Navigation.tsx","pages/HomePage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable/PersonRow.tsx","components/PeopleTable/TableHeader.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","pages/usePeoplePage.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/MainRouter.tsx","App.tsx","index.tsx"],"names":["IsLinkActive","isActive","cn","Navigation","className","role","to","HomePage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","sexFilter","All","Male","Female","PeopleFilters","centuries","setSearchParams","century","getAll","map","Number","sex","get","query","keys","filter","type","placeholder","onChange","event","target","classNames","includes","String","length","Loader","PersonRow","person","getName","name","pathname","useLocation","slug","born","died","mother","motherName","father","fatherName","TableHeader","onOrderItems","param","fieldName","sort","toLowerCase","order","PeopleTable","list","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","usePeoplePage","useState","isLoading","setIsLoading","people","setPeople","hasError","setHasError","useEffect","getPeople","assign","find","p","Math","ceil","catch","finally","centuriesList","useMemo","reduce","centuriesArray","push","filterPattern","RegExp","trim","peopleList","filteredAndSorted","firstPerson","secondPerson","sortColumn","localeCompare","reverse","isFiltered","PeoplePage","NotFoundPage","MainRouter","path","element","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.397f7692.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst IsLinkActive = ({ isActive }: { isActive: boolean }) => cn('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={IsLinkActive}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={IsLinkActive}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nconst sexFilter: {\n  [key:string]: string | null;\n} = {\n  All: null,\n  Male: 'm',\n  Female: 'f',\n};\n\nexport const PeopleFilters:React.FC<{\n  centuries: number[]\n}> = ({ centuries }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onChangeQuery: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setSearchParams(getSearchWith(searchParams, {\n      query: event.target.value || null,\n    }));\n  };\n\n  const params = {\n    century: searchParams.getAll('century').map(Number),\n    sex: searchParams.get('sex'),\n    query: searchParams.get('query'),\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {Object.keys(sexFilter).map((filter:string) => (\n          <SearchLink\n            key={filter}\n            className={sexFilter[filter] === params.sex ? 'is-active' : ''}\n            params={{ sex: sexFilter[filter] }}\n          >\n            {filter}\n          </SearchLink>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={params.query || ''}\n            onChange={onChangeQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <div className=\"level-left\">\n              {centuries.map(century => (\n                <SearchLink\n                  key={century}\n                  data-cy=\"century\"\n                  className={classNames('button mr-1', {\n                    'is-info': params.century.includes(century),\n                  })}\n                  params={{\n                    century: params.century.includes(century)\n                      ? params.century\n                        .filter(value => value !== century).map(String)\n                      : [...params.century, century].map(String),\n                  }}\n                >\n                  {century}\n                </SearchLink>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={`button is-success ${params.century.length > 0 ? 'is-outlined' : ''}`}\n              params={{ century: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          data-cy=\"centuryALL\"\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ century: null, query: null, sex: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport const PersonRow:React.FC<{\n  person: Person,\n}> = ({ person }) => {\n  const getName = (name:string | null) => (!name ? '-' : name);\n\n  const { pathname } = useLocation();\n  const [searchParams] = useSearchParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={pathname === `/people/${person.slug}`\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <Link to={`/people/${person.slug}`} className={person.sex === 'm' ? '' : 'has-text-danger'}>\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother ? (\n          <Link\n            to={`/people/${person.mother.slug}?${searchParams.toString()}`}\n            className=\"has-text-danger\"\n          >\n            {person.motherName}\n          </Link>\n        ) : getName(person.motherName) }\n\n      </td>\n      <td>\n        {person.father ? (\n          <Link to={`/people/${person.father.slug}?${searchParams.toString()}`}>\n            {person.fatherName}\n          </Link>\n        ) : getName(person.fatherName) }\n\n      </td>\n    </tr>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\nexport const TableHeader = () => {\n  const [searchParams] = useSearchParams();\n  const params = {\n    sort: searchParams.get('sort'),\n    order: searchParams.get('order'),\n  };\n\n  const onSortItems = (param: string) => (params.order === null ? param : null);\n  const onOrderItems = (param: string) => ((params.sort === param\n    && params.order === null) ? 'desc' : null);\n\n  const sortFields = ['Name', 'Sex', 'Born', 'Died'];\n\n  return (\n    <thead>\n      <tr>\n        {sortFields.map((fieldName:string) => (\n          <th key={fieldName}>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              {fieldName}\n              <SearchLink\n                params={{\n                  sort: onSortItems(fieldName.toLowerCase()),\n                  order: onOrderItems(fieldName.toLowerCase()),\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas', {\n                    'fa-sort': params.sort !== fieldName.toLowerCase(),\n                    'fa-sort-down': params.order === 'desc'\n                    && params.sort === fieldName.toLowerCase(),\n                    'fa-sort-up': params.order !== 'desc'\n                    && params.sort === fieldName.toLowerCase(),\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n        ))}\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonRow } from './PersonRow';\nimport { TableHeader } from './TableHeader';\n\nexport const PeopleTable:React.FC<{ list: Person[] }> = ({ list }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <TableHeader />\n\n      <tbody>\n        {list.map((person:Person) => (\n          <PersonRow\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const usePeoplePage = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState<boolean>(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((response) => {\n        setPeople(response\n          .map((person:Person) => Object.assign(person, {\n            mother: response.find(p => p.name === person.motherName) || null,\n            father: response.find(p => p.name === person.fatherName) || null,\n            century: Math.ceil(person.born / 100),\n          })));\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const centuriesList = useMemo(() => people\n    .reduce((centuriesArray:number[], person:Person) => {\n      if (!person.century || centuriesArray.includes(person.century)) {\n        return centuriesArray;\n      }\n\n      centuriesArray.push(person.century);\n\n      return centuriesArray;\n    }, []).sort(), [people]);\n\n  const [searchParams] = useSearchParams();\n  const filterPattern = new RegExp((searchParams\n    .get('query') || '').trim(), 'i');\n\n  const peopleList = useMemo(() => {\n    const filteredAndSorted = people // filter name, motherName, fatherName below\n      .filter(({ name, motherName, fatherName }:Person) => name\n        .search(filterPattern) > -1 || (motherName && motherName\n        .search(filterPattern) > -1) || (fatherName && fatherName\n        .search(filterPattern) > -1)) // filter sex below\n      .filter(({ sex }:Person) => !searchParams.get('sex')\n   || searchParams.get('sex') === sex)\n      .filter(({ century }:Person) => searchParams // century filter\n        .getAll('century').length === 0 || searchParams\n        .getAll('century').includes((century || '')?.toString()))\n      .sort((firstPerson: Person, secondPerson: Person) => {\n        if (searchParams.get('sort') === null) {\n          return 0;\n        }\n\n        const sortColumn = searchParams.get('sort') as keyof Person;\n\n        return (typeof firstPerson[sortColumn] === 'string')\n          ? (firstPerson[sortColumn] || '').toString()\n            .localeCompare((secondPerson[sortColumn] || '').toString())\n          : Number(firstPerson[sortColumn]) - Number(secondPerson[sortColumn]);\n      });\n\n    return (searchParams.get('order') === 'desc')\n      ? filteredAndSorted.reverse() : filteredAndSorted;\n  },\n  [people, searchParams]);\n\n  const isFiltered = (!searchParams.get('sex')\n|| searchParams.getAll('century').length > 0\n|| searchParams.get('query'));\n\n  return {\n    isLoading,\n    people,\n    hasError,\n    centuriesList,\n    isFiltered,\n    peopleList,\n  };\n};\n","import { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { usePeoplePage } from './usePeoplePage';\n\nexport const PeoplePage:React.FC = () => {\n  const {\n    isLoading,\n    people,\n    hasError,\n    centuriesList,\n    isFiltered,\n    peopleList,\n  } = usePeoplePage();\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && <PeopleFilters centuries={centuriesList} />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {!isLoading && hasError\n              && <p data-cy=\"peopleLoadingError\">Something went wrong</p>}\n\n              {!isLoading && people.length === 0\n              && !hasError && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!hasError && !isLoading && isFiltered && peopleList.length === 0\n              && (\n                <p>\n                  There are no people matching the current search criteria\n                </p>\n              )}\n\n              {!isLoading && !hasError && peopleList.length > 0\n              && <PeopleTable list={peopleList} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from '../pages/HomePage';\nimport { PeoplePage } from '../pages/PeoplePage';\nimport { NotFoundPage } from '../pages/NotFoundPage';\n\nexport const MainRouter:React.FC = () => (\n  <main className=\"section\">\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/people/:slug\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </main>\n);\n","import { Navigation } from './components/Navigation';\n\nimport './App.scss';\nimport { MainRouter } from './components/MainRouter';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <div className=\"section\">\n        <MainRouter />\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}